@model HIS_MCRS.Areas.ManagementReports.ViewModels.SalesPromotionDailyPerformanceActBudget
@using HIS_MCRS.Enumerations;
@{
    ViewBag.Title = "Sales Promotion Reports";

    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    //options.Confirm = "Do you wish to submit this form?";
    options.OnBegin = "_indicator.Body()";
    options.OnComplete = "_indicator.Stop()";
    //options.OnFailure = "OnFailure";
    //options.OnSuccess = "OnSuccess";
    //options.LoadingElementId = "loading";
    options.LoadingElementDuration = 1000;
    options.UpdateTargetId = "reportWrapper";
    options.InsertionMode = InsertionMode.Replace;
}

<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">
            <div class="col-xs-5">
                <h4><span class="navbar-header"> Doctors Daily Actual vs Budget</span></h4>
            </div>
            <div class="navbar-collapse navbar-right">
            </div>
        </div>
    </div>

    @using(Ajax.BeginForm(options)){
        <div class="panel-body" style="height: auto;">
            <div class="col-xs-12">
                <div class="col-xs-3">
                    <fieldset>
                        <legend style="font-size: 13px; margin-bottom: 3px;"><strong>Date</strong></legend>
                        <div class="col-xs-12">

                            <input id="startdate" name="startdate" type="hidden" value="1" />

                            @Html.LabelFor(m => m.StartDate, new { @class = "col-xs-3 top5 disabled" })
                            <div class="col-xs-8 input-group">
                               @* @Html.TextBoxFor(m => m.StartDate, new { @class = "datepicker form-control",disabled="disabled", style = "z-index:0 !important;", 
                                                                    data_bind="datepicker:$root.StartDate, datepickerOptions:{format: 'dd-M-yyyy', autoclose: true}" })
                                *@
                                @Html.TextBoxFor(m => m.StartDate,  new { @class = "form-control",disabled="disabled" })
                                <span class="input-group-btn ">
                                    <button data-bind="glyphfor:'StartDate'" class="disabled btn btn-default glyphicon glyphicon-calendar" type="button" style="margin-top: -1px;" disabled></button>
                                </span>
                            </div>
                        </div>
                        <div class="col-xs-12 top10">
                            @Html.LabelFor(m => m.EndDate, new { @class = "col-xs-3 top5" })
                            <div class="col-xs-8 input-group">
                                @Html.TextBoxFor(m => m.EndDate, new { @class = "datepicker form-control", style = "z-index:0 !important;",onchange="myFunction()",
                                                                  data_bind="datepicker:$root.EndDate, datepickerOptions:{format: 'dd-M-yyyy', autoclose: true}"})
                                <span class="input-group-btn">
                                    <button data-bind="glyphfor:'EndDate'" class="btn btn-default glyphicon glyphicon-calendar" type="button" style="margin-top: -1px;" onchange="myFunction()"></button>
                                </span>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="col-xs-4">
                  <fieldset>
                        <legend style="font-size: 13px; margin-bottom: 3px;"><strong>Branch</strong></legend>
                        <div class="col-xs-12">
                            <div class="col-xs-12">
                              @* @Html.DropDownListFor(m => m.StudentGender, 
                    new SelectList(Enum.GetValues(typeof(Gender))), 
                    "Select Gender")*@
 @Html.DropDownListFor(m=>m.BranchId, new SelectList(Enum.GetValues(typeof(Bi_Site))),"", new { @class = "form-control", data_bind = "select2:{}" })

                             @*   @Html.DropDownListFor(m => m.BranchId, new SelectList(Model.BranchList,
                               "Id", "Name"), new { @class = "form-control", data_bind = "select2:{}" })*@
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="col-xs-3">
                    <fieldset>
                        <legend style="font-size: 13px; margin-bottom: 3px;"><strong>Report</strong></legend>
                        <div class="col-xs-12">
                            <div class="col-xs-12">
                                <div class="radio" style="margin: 0 0 0 0">
                                  @*  @Html.RadioButtonFor(m => m.ReportType, (int)ARReportStatement.BYSUMMARY, new { id = ARReportStatement.BYSUMMARY, Checked = "checked" })
                                    <label class="row top5" style="font-size: 12px;">Statement by Summary</label>*@
                                    <div class="radio" style="margin: 0 0 0 0">
                                        @Html.RadioButtonFor(m=>m.ReportType,(int)SalesPromotion_ReportType.BYDOCTOR, new { id =SalesPromotion_ReportType.BYDOCTOR,Checked = "checked" })
                                        <label class="row top5" style="font-size: 12px;">Report By Doctor</label>

                            
                                    </div>
                                    <div class="radio" style="margin: 0 0 0 0">
                                        @Html.RadioButtonFor(m => m.ReportType, (int)SalesPromotion_ReportType.BYDEPT, new { id = SalesPromotion_ReportType.BYDEPT })
                                        <label class="row top5" style="font-size: 12px;">Report By Department</label>


                                  @*      @Html.RadioButtonFor(m => m.ReportType, (int)SalesPromotion_ReportType.BYDOCTOR, new { id =SalesPromotion_ReportType.BYDOCTOR })
                                        <label class="row top5" style="font-size: 12px;">Report By Doctor</label>*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <div class="col-xs-2">
                    <div class="pull-right col-xs-10">
                        <button id="RunReport" type="submit" class="btn btn-success col-xs-12" value="RunReport">
                            <span class="glyphicon glyphicon-tasks"></span>Run Report
                        </button>
                        <a id="Close"  href="@Url.Action("Index", "ARReports")" class="top5 btn btn-danger col-xs-12">
                            <span class="glyphicon glyphicon-off"></span>Close
                        </a>
                    </div>
                </div>
            </div>

            <div id="reportWrapper" class="col-xs-12 top10 container-fluid" style="min-height: 390px; background-color: #6C7A89;"></div>

        </div>
    }
</div>



@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/knockoutjs")
@section Scripts{
    <script type="text/javascript" src="~/Scripts/MCRS/global/dialogwrapper.js"></script>
    @*<script type="text/javascript" src="~/Scripts/ManagementReports/ARReports/StatementSummaryByCategory.js"></script>*@
    <script type="text/javascript">
        $(document).ready(function () {
            myFunction();
            var data = '@Html.Raw(Json.Encode(this.Model))';
            var viewModel = new ViewModel(JSON.parse(data));
            ko.applyBindings(viewModel);

        });
        function myFunction()
        {
            var _myDate = $('#EndDate').val();
            var new_date = _myDate.split('-');
            var day = new_date[0];
            var month = new_date[1];
            var year = new_date[2];
            $('#StartDate').val("1-" + month + "-" + year);
            $('#startdate').val(year + "-" + month + "-01");
          
        }
        function ViewModel(model) {
            self = this;
            console.log(model.StartDate);
            self.StartDate = ko.observable(model.StartDate);
            self.EndDate = ko.observable(model.EndDate);
        }

    </script>
}