@model HIS_MCRS.Areas.ManagementReports.ViewModels.HRDStaffContractDetails


@{  
    ViewBag.Title = "Human Resources Department Reports ";

    AjaxOptions options = new AjaxOptions();
    options.HttpMethod = "POST";
    //options.Confirm = "Do you wish to submit this form?";
    options.OnBegin = "_indicator.Body()";
    options.OnComplete = "_indicator.Stop()";
    //options.OnFailure = "OnFailure";
    //options.OnSuccess = "OnSuccess";
    //options.LoadingElementId = "loading";
    options.LoadingElementDuration = 1000;
    options.UpdateTargetId = "reportWrapper";
    options.InsertionMode = InsertionMode.Replace;
}



<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">
            <div class="col-xs-5">
                <h4><span class="navbar-header">Employee Wise Evaluation Report</span></h4>
            </div>
            <div class="navbar-collapse navbar-right">
            </div>
        </div>
    </div>

    <div class="panel-body" style="height: auto;">
        @using (Ajax.BeginForm(options))
            {
            <div class="form-inline">
                <div class="row">


                    <div class="col-xs-6   " style="">
                                @Html.LabelFor(m => m.EmployeeId, new { @class = "col-xs-4  " })
                                <div class="col-xs-8">
                                    <select id="@Html.IdFor(m=>m.EmployeeId)" name="@Html.NameFor(m=>m.EmployeeId)" class="form-control"
                                data-bind="options:$root.EmployeeList, optionsText:'FullName', optionsValue:'EmployeeId', 
                                           value: $root.SelectedEmployeeList, select2:{allowClear: true, placeholder:''}">
                                    </select>
                    </div>
                       
                    @Html.LabelFor(m => m.EvaluationDate, new { @class = "col-xs-4  top10 " })
                    <div class="col-xs-8 top10">
                        <select class="form-control select2"id="@Html.IdFor(model=>model.EvaluationDate)" name="@Html.NameFor(model=>model.EvaluationDate)"
            data-bind="options: $root.EvaluationDateList, optionsValue:'id', optionsText:'evaluation', value: $root.EvaluationDate, select2:{}">
                        </select>
                    </div>
                    </div>
                    <div class="col-xs-3 " style="">
                    </div>@*  col-xs-3*@
                    <div class="col-xs-3" style="">
                        <button id="RunReport" data-bind="click:$root.submit" type="submit" class="btn btn-success" value="RunReport">
                            <span class="glyphicon glyphicon-tasks"></span>Run Report
                        </button>
                        <a id="Close"  href="@Url.Action("Index", "HumanResources")" class="btn btn-danger ">
                            <span class="glyphicon glyphicon-off"></span>Close
                        </a>
                    </div>
                </div>
                <input id="SelectedCategoryText" name="SelectedCategoryText" type="hidden" value="1" data-bind="value:$root.SelectedCategoryText" />
                <div id="reportWrapper" class="col-xs-12 top10 container-fluid" style="min-height: 390px; background-color: #6C7A89;"></div>

            </div>
            
            
         
           
            }
    </div>@*panel-body*@
</div>

<input id="urlActions" class="hidden"
    data-getcompanybycategory="getCompanyByCategory"
    data-getperformanceeval="getPerformanceEval" />


@Scripts.Render("~/bundles/jqueryval")
@Scripts.Render("~/Scripts/knockoutjs")
@section Scripts{
    <script type="text/javascript" src="~/Scripts/MCRS/global/dialogwrapper.js"></script>
    @*<script type="text/javascript" src="~/Scripts/MCRS/otherreports/js_generalexpenses.js"></script>*@
    <script type="text/javascript">
        $(document).ready(function () {

            var data = '@Html.Raw(Json.Encode(this.Model))';
            var viewModel = new ViewModel(JSON.parse(data), $("#urlActions"));
            viewModel.inputUrlActions = $("#urlActions");
            ko.applyBindings(viewModel);


        });

        function ViewModel(model, elem) {

            self = this;
            self.inputUrlActions = elem;
            

            self.SelectedEmployeeList = ko.observable(0);
            self.EmployeeId = ko.observable(0);
            self.EmployeeList = ko.observableArray(model.EmployeeList);

            self.EvaluationDate = ko.observable(0);
            self.EvaluationDateList = ko.observableArray([]);

         self.SelectedCategoryText = ko.observable('test');


            self.EvaluationDate.subscribe(function (newValue) {
                //console.log('clic' + newValue);
                if (newValue) {
                    $.each(self.EvaluationDateList(), function (i, item) {
                       // console.log('clic' + item.id);
                        if (item.id == newValue) {
                            $('#SelectedCategoryText').val(moment(item.frommonth).format('DD-MMM-YYYY') + ' To: ' + moment(item.tomonth).format('DD-MMM-YYYY'));
                        }
                    });
                }

            });

            self.getGradeByCompanyId = function () {

                var id = self.SelectedEmployeeList();
             
                if (self.SelectedEmployeeList() != undefined) {
                    
                    param = { EmpId: id };
                    console.log('id:123--' + id);
                    url = self.inputUrlActions.data("getperformanceeval");
                    self.EvaluationDateList([]);
                    self.EvaluationDate(0);
                    ajaxWrapper.GetWithLoading(url, param, $("#EvaluationDate"), function (data, e) {
                        console.log(data);
            
                      
                        ko.utils.arrayPushAll(self.EvaluationDateList, data);
                    });
                 
                   // self.SelectedCategoryText = ko.observable(self.EvaluationDateList()[0].evaluation);
                }
              
            }
            self.SelectedEmployeeList.subscribe(function () {
                self.getGradeByCompanyId();
                self.SelectedCategoryText = ko.observable($("#EvaluationDate option:selected").text());
            });
             
        }

    </script>
}


